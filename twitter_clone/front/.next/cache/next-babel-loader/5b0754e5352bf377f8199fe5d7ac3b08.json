{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\my_study\\\\42FrontEnd\\\\twitter_clone\\\\front\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Form, Input, Button } from \"antd\";\nimport { useState, useCallback, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport UserProfile from \"../components/UserProfile\";\nimport PropTypes from \"prop-types\";\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _ustInput = ustInput(\"\"),\n      _ustInput2 = _slicedToArray(_ustInput, 2),\n      id = _ustInput2[0],\n      onChangeId = _ustInput2[1];\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      password = _useInput2[0],\n      onChangePassword = _useInput2[1]; //컴포넌트에 프롭스로 넘겨주는 함수는 usecallback으로 사용하기\n  //최적화를 위해서\n  //이렇게 쓰면 값을 캐싱하기 때문에 해당 객체를 사용하면 리렌더링되지않음.\n\n\n  var style = useMemo(function () {\n    return {\n      marginTop: 10\n    };\n  }, []); //onFinish는 이미 preventDefault가 적용됨.\n\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]); //re-rendering은 return부분 중에서 바뀐부분들만 리랜더링됨.\n\n  return (//submit이되면 onfinish가 호출됨.\n    __jsx(Form, {\n      onFinish: onSubmitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"ID\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-id\",\n      value: id,\n      onChange: onChangeId,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Password\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      onChange: onChangePassword,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    })), __jsx(ButtonWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Login\"), __jsx(Link, {\n      href: \"/Signup\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Signup\")))))\n  );\n};\n\n_s(LoginForm, \"B1LH7zJkVWtuHPQ4jcck52z/IxU=\", true);\n\n_c2 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/my_study/42FrontEnd/twitter_clone/front/components/LoginForm.js"],"names":["Form","Input","Button","useState","useCallback","useMemo","Link","styled","UserProfile","PropTypes","ButtonWrapper","div","LoginForm","setIsLoggedIn","ustInput","id","onChangeId","useInput","password","onChangePassword","style","marginTop","onSubmitForm","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport { useState, useCallback, useMemo } from \"react\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport UserProfile from \"../components/UserProfile\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n\r\n  const [id, onChangeId] = ustInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  //컴포넌트에 프롭스로 넘겨주는 함수는 usecallback으로 사용하기\r\n  //최적화를 위해서\r\n  //이렇게 쓰면 값을 캐싱하기 때문에 해당 객체를 사용하면 리렌더링되지않음.\r\n  const style = useMemo(() => ({ marginTop: 10 }), []);\r\n\r\n  //onFinish는 이미 preventDefault가 적용됨.\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(id, password);\r\n    setIsLoggedIn(true);\r\n  }, [id, password]);\r\n\r\n  //re-rendering은 return부분 중에서 바뀐부분들만 리랜더링됨.\r\n  return (\r\n    //submit이되면 onfinish가 호출됨.\r\n    <Form onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">ID</label>\r\n        <br />\r\n        <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">Password</label>\r\n        <br />\r\n        <Input\r\n          name=\"user-password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          required\r\n        ></Input>\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\r\n          Login\r\n        </Button>\r\n        <Link href=\"/Signup\">\r\n          <a>\r\n            <Button>Signup</Button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n    </Form>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport HYDRATE from \"next-redux-wrapper\";\nconst initialState = {\n  name: \"secho\",\n  password: \"1234\"\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"CHANGE_NAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.name\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/my_study/42FrontEnd/twitter_clone/front/redux/reducers/rootReducer.js"],"names":["HYDRATE","initialState","name","password","rootReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAL;AACE,6CACKK,KADL,GAEKC,MAAM,CAACE,OAFZ;;AAIF,SAAK,aAAL;AACE,6CACKH,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFf;;AAIF;AACE,aAAOG,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import HYDRATE from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n  name: \"secho\",\r\n  password: \"1234\",\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"CHANGE_NAME\":\r\n      return {\r\n        ...state,\r\n        name: action.name,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport HYDRATE from 'next-redux-wrapper';\nvar initialState = {\n  name: 'secho',\n  password: '1234'\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_NAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.name\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/my_study/42FrontEnd/twitter_clone/front/redux/reducers/rootReducer.js"],"names":["HYDRATE","initialState","name","password","rootReducer","state","action","type"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,OADa;AAEnBC,EAAAA,QAAQ,EAAG;AAFQ,CAArB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeE,WAAf","sourcesContent":["import HYDRATE from 'next-redux-wrapper';\r\n\r\nconst initialState = {\r\n  name: 'secho',\r\n  password : '1234',\r\n};\r\n\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => { \r\n  switch (action.type) { \r\n    case 'CHANGE_NAME':\r\n      return {\r\n        ...state,\r\n        name: action.name,\r\n      }\r\n  }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}